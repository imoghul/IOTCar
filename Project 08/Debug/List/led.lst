###############################################################################
#
# IAR C/C++ Compiler V7.21.1.1000/W32 for MSP430          07/Apr/2022  15:48:25
# Copyright 1996-2021 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for MSP430, 8K KickStart Edition 7.21
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  C:\Users\saad\Documents\ece-306\Project 08\led.c
#    Command line  =  
#        -f C:\Users\saad\AppData\Local\Temp\EW995D.tmp
#        ("C:\Users\saad\Documents\ece-306\Project 08\led.c" -lC
#        "C:\Users\saad\Documents\ece-306\Project 08\Debug\List" -o
#        "C:\Users\saad\Documents\ece-306\Project 08\Debug\Obj" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR2355__ -e --double=32 --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 8.5\430\lib\dlib\dl430xlsfn.h" -I ./
#        --core=430X --data_model=small -On --multiplier=32
#        --hw_workaround=CPU40 --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        C:\Users\saad\Documents\ece-306\Project 08\Debug\List\led.lst
#    Object file   =  
#        C:\Users\saad\Documents\ece-306\Project 08\Debug\Obj\led.r43
#
###############################################################################

C:\Users\saad\Documents\ece-306\Project 08\led.c
      1          //==============================================================================
      2          // File Name : led.c
      3          //
      4          // Description: This file contains mission code
      5          //
      6          // Author: Ibrahim Moghul
      7          // Date: Feb 2022
      8          // Compiler: Built with IAR Embedded Workbench Version: 7.21.1
      9          //==============================================================================
     10          
     11          #include "led.h"
     12          #include "init.h"

   \                                 In  segment DATA16_AN, at 0x202
   \   union <unnamed> _A_PAOUT_L
   \                     _A_PAOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x242
   \   union <unnamed> _A_PCOUT_L
   \                     _A_PCOUT_L:
   \   000000                DS8 2
     13          #include "functions.h"
     14          #include "ports.h"
     15          
     16          
     17          extern volatile unsigned char update_display;
     18          extern volatile unsigned char display_changed;
     19          extern volatile unsigned int Time_Sequence;
     20          extern volatile char one_time;
     21          extern volatile unsigned int cycle_count;
     22          extern volatile unsigned int stopwatch_milliseconds;
     23          extern volatile unsigned int stopwatch_seconds;
     24          
     25          
     26          //===========================================================================
     27          // Function name: Display_Process
     28          //
     29          // Description: Display output to LCD
     30          //
     31          // Passed : no variables passed
     32          // Locals: no variables declared
     33          // Returned: no values returned
     34          // Globals: display_changed
     35          // update_display
     36          //
     37          // Author: Jim Carlson
     38          // Date: Feb 2022
     39          // Compiler: Built with IAR Embedded Workbench Version: (7.21.1)
     40          //===========================================================================

   \                                 In  segment CODE, align 2
     41          void Display_Process(void) {
   \                     Display_Process:
     42              if(update_display) {
   \   000000   C293....     CMP.B   #0x0, &update_display
   \   000004   0D24         JEQ     ??Display_Process_0
     43                  update_display = 0;
   \   000006   C243....     MOV.B   #0x0, &update_display
     44          
     45                  if(display_changed) {
   \   00000A   C293....     CMP.B   #0x0, &display_changed
   \   00000E   0824         JEQ     ??Display_Process_0
     46                      display_changed = 0;
   \   000010   C243....     MOV.B   #0x0, &display_changed
     47                      Display_Update(0, 0, 0, 0);
   \   000014   4F43         MOV.B   #0x0, R15
   \   000016   4E43         MOV.B   #0x0, R14
   \   000018   4D43         MOV.B   #0x0, R13
   \   00001A   4C43         MOV.B   #0x0, R12
   \   00001C   ........     CALLA   #Display_Update
     48                  }
     49              }
     50          }
   \                     ??Display_Process_0:
   \   000020   1001         RETA
     51          
     52          
     53          //===========================================================================
     54          // Function name: Carlson_StateMachine
     55          //
     56          // Description: Toggle LEDs
     57          //
     58          // Passed : no variables passed
     59          // Locals: no variables declared
     60          // Returned: no values returned
     61          // Globals: one_time
     62          // Time_Sequence
     63          // display_changed
     64          //
     65          // Author: Jim Carlson
     66          // Date: Feb 2022
     67          // Compiler: Built with IAR Embedded Workbench Version: (7.21.1)
     68          //===========================================================================

   \                                 In  segment CODE, align 2
     69          void Carlson_StateMachine(void) {
   \                     Carlson_StateMachine:
     70          
     71              switch(Time_Sequence) {
   \   000000   1F42....     MOV.W   &Time_Sequence, R15
   \   000004   3F803200     SUB.W   #0x32, R15
   \   000008   3B24         JEQ     ??Carlson_StateMachine_6
   \   00000A   3F803200     SUB.W   #0x32, R15
   \   00000E   2B24         JEQ     ??Carlson_StateMachine_7
   \   000010   3F803200     SUB.W   #0x32, R15
   \   000014   1D24         JEQ     ??Carlson_StateMachine_8
   \   000016   3F803200     SUB.W   #0x32, R15
   \   00001A   1124         JEQ     ??Carlson_StateMachine_9
   \   00001C   3F803200     SUB.W   #0x32, R15
   \   000020   3920         JNE     ??Carlson_StateMachine_5
     72                  case 250:                        //
     73                      if(one_time) {
   \   000022   C293....     CMP.B   #0x0, &one_time
   \   000026   0824         JEQ     ??Carlson_StateMachine_10
     74                          Init_LEDs();
   \   000028   ........     CALLA   #Init_LEDs
     75                          lcd_BIG_mid();
   \   00002C   ........     CALLA   #lcd_BIG_mid
     76                          display_changed = 1;
   \   000030   D243....     MOV.B   #0x1, &display_changed
     77                          one_time = 0;
   \   000034   C243....     MOV.B   #0x0, &one_time
     78                      }
     79          
     80                      Time_Sequence = 0;             //
   \                     ??Carlson_StateMachine_10:
   \   000038   8243....     MOV.W   #0x0, &Time_Sequence
     81                      break;
   \   00003C   1001         RETA
     82          
     83                  case 200:                        //
     84                      if(one_time) {
   \                     ??Carlson_StateMachine_9:
   \   00003E   C293....     CMP.B   #0x0, &one_time
   \   000042   2824         JEQ     ??Carlson_StateMachine_5
     85                          P6OUT |= GRN_LED;            // Change State of LED 5
   \   000044   F2D040004302 BIS.B   #0x40, &0x243
     86                          one_time = 0;
   \   00004A   C243....     MOV.B   #0x0, &one_time
     87                      }
     88          
     89                      break;
   \   00004E   1001         RETA
     90          
     91                  case 150:                         //
     92                      if(one_time) {
   \                     ??Carlson_StateMachine_8:
   \   000050   C293....     CMP.B   #0x0, &one_time
   \   000054   1F24         JEQ     ??Carlson_StateMachine_5
     93                          P1OUT |= RED_LED;            // Change State of LED 4
   \   000056   D2D30202     BIS.B   #0x1, &0x202
     94                          P6OUT &= ~GRN_LED;           // Change State of LED 5
   \   00005A   F2C040004302 BIC.B   #0x40, &0x243
     95                          one_time = 0;
   \   000060   C243....     MOV.B   #0x0, &one_time
     96                      }
     97          
     98                      break;
   \   000064   1001         RETA
     99          
    100                  case 100:                         //
    101                      if(one_time) {
   \                     ??Carlson_StateMachine_7:
   \   000066   C293....     CMP.B   #0x0, &one_time
   \   00006A   1424         JEQ     ??Carlson_StateMachine_5
    102                          //          lcd_4line();
    103                          lcd_BIG_bot();
   \   00006C   ........     CALLA   #lcd_BIG_bot
    104                          P6OUT |= GRN_LED;            // Change State of LED 5
   \   000070   F2D040004302 BIS.B   #0x40, &0x243
    105                          display_changed = 1;
   \   000076   D243....     MOV.B   #0x1, &display_changed
    106                          one_time = 0;
   \   00007A   C243....     MOV.B   #0x0, &one_time
    107                      }
    108          
    109                      break;
   \   00007E   1001         RETA
    110          
    111                  case  50:                        //
    112                      if(one_time) {
   \                     ??Carlson_StateMachine_6:
   \   000080   C293....     CMP.B   #0x0, &one_time
   \   000084   0724         JEQ     ??Carlson_StateMachine_5
    113                          P1OUT &= ~RED_LED;           // Change State of LED 4
   \   000086   D2C30202     BIC.B   #0x1, &0x202
    114                          P6OUT &= ~GRN_LED;           // Change State of LED 5
   \   00008A   F2C040004302 BIC.B   #0x40, &0x243
    115                          one_time = 0;
   \   000090   C243....     MOV.B   #0x0, &one_time
    116                      }
    117          
    118                      break;                         //
    119          
    120                  default:
    121                      break;
    122              }
    123          
    124          }
   \                     ??Carlson_StateMachine_5:
   \   000094   1001         RETA
   \   000096                REQUIRE _A_PCOUT_L
   \   000096                REQUIRE _A_PAOUT_L

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Carlson_StateMachine
        4   -> Init_LEDs
        4   -> lcd_BIG_bot
        4   -> lcd_BIG_mid
      4   Display_Process
        4   -> Display_Update


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
     150  Carlson_StateMachine
      34  Display_Process
       2  _A_PAOUT_L
       2  _A_PCOUT_L

 
 184 bytes in segment CODE
   4 bytes in segment DATA16_AN
 
 184 bytes of CODE memory
   0 bytes of DATA memory (+ 4 bytes shared)

Errors: none
Warnings: none
