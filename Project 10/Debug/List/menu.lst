###############################################################################
#
# IAR C/C++ Compiler V7.21.1.1000/W32 for MSP430          10/Apr/2022  15:23:41
# Copyright 1996-2021 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for MSP430, 8K KickStart Edition 7.21
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  C:\Users\saad\Documents\ece-306\Project 10\menu.c
#    Command line  =  
#        -f C:\Users\saad\AppData\Local\Temp\EW65D.tmp
#        ("C:\Users\saad\Documents\ece-306\Project 10\menu.c" -lC
#        "C:\Users\saad\Documents\ece-306\Project 10\Debug\List" -o
#        "C:\Users\saad\Documents\ece-306\Project 10\Debug\Obj" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR2355__ -e --double=32 --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 8.5\430\lib\dlib\dl430xlsfn.h" -I ./
#        --core=430X --data_model=small -On --multiplier=32
#        --hw_workaround=CPU40 --code_model=large)
#    Locale        =  English_USA.1252
#    List file     =  
#        C:\Users\saad\Documents\ece-306\Project 10\Debug\List\menu.lst
#    Object file   =  
#        C:\Users\saad\Documents\ece-306\Project 10\Debug\Obj\menu.r43
#
###############################################################################

C:\Users\saad\Documents\ece-306\Project 10\menu.c
      1          #include "menu.h"
      2          #include "msp430.h"
      3          #include "adc.h"
      4          #include "functions.h"
      5          #include <string.h>
      6          extern volatile unsigned int ADC_Thumb;
      7          extern volatile unsigned char display_changed;
      8          extern char display_line[4][11];

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
      9          char menuState = START_MENU;
   \                     menuState:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for menuState>`

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     10          unsigned int lastThumb;
   \                     lastThumb:
   \   000000                DS8 2
     11          
     12          

   \                                 In  segment DATA16_I, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     13          menu start  = {
   \                     start:
   \   000000                DS8 64
   \   000040                REQUIRE `?<Initializer for start>`
     14              .length = 1,
     15              .current = 0,
     16              .name = START_MENU,
     17              .headers = {""},
     18              .values = {""},
     19              .transitions = {&start}
     20          };
     21          
     22          

   \                                 In  segment DATA16_I, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     23          menu* currMenu = &start;
   \                     currMenu:
   \   000000                DS8 2
   \   000002                REQUIRE `?<Initializer for currMenu>`
     24          
     25          
     26          

   \                                 In  segment CODE, align 2
     27          void displayStartMenu() {
   \                     displayStartMenu:
     28              /*lcd_BIG_mid();
     29              strcpy(display_line[0], "  Ibrahim ");
     30              strcpy(display_line[1], "Homework 9");
     31              strcpy(display_line[2], "  Moghul  ");
     32              display_changed = 1;*/
     33          }
   \   000000   1001         RETA
     34          
     35          

   \                                 In  segment CODE, align 2
     36          void updateMenuPos(menu* m) {
   \                     updateMenuPos:
     37              unsigned int val = (ADC_Thumb * m->length) >> THUMB_RES;
   \   000000   0212         PUSH.W  SR
   \   000002   32C2         DINT
   \   000004   0343         NOP
   \   000006   E24C....     MOV.B   @R12, &__iar_HWMUL             // MPY
   \   00000A   9242........ MOV.W   &ADC_Thumb, &__iar_HWMUL + 8   // OP2
   \   000010   1F42....     MOV.W   &__iar_HWMUL + 10, R15         // RESLO
   \   000014   0343         NOP
   \   000016   3241         POP.W   SR
   \   000018   5F0F         RRUM.W  #0x4, R15
   \   00001A   5F03         RRUM.W  #0x1, R15
     38              m->current  = val < m->length ? val : m->length - 1;
   \   00001C   6E4C         MOV.B   @R12, R14
   \   00001E   4E4E         MOV.B   R14, R14
   \   000020   0F9E         CMP.W   R14, R15
   \   000022   052C         JC      ??updateMenuPos_1
   \   000024   0E12         PUSH.W  R14
   \   000026   C14F0000     MOV.B   R15, 0(SP)
   \   00002A   3E41         POP.W   R14
   \   00002C   023C         JMP     ??updateMenuPos_0
   \                     ??updateMenuPos_1:
   \   00002E   6E4C         MOV.B   @R12, R14
   \   000030   7E53         ADD.B   #0xff, R14
   \                     ??updateMenuPos_0:
   \   000032   CC4E0100     MOV.B   R14, 0x1(R12)
     39          }
   \   000036   1001         RETA
     40          

   \                                 In  segment CODE, align 2
     41          void trainsitionMenu(void) {
   \                     trainsitionMenu:
     42              currMenu = currMenu->transitions[currMenu->current];
   \   000000   1E42....     MOV.W   &currMenu, R14
   \   000004   1F42....     MOV.W   &currMenu, R15
   \   000008   5F4F0100     MOV.B   0x1(R15), R15
   \   00000C   4F4F         MOV.B   R15, R15
   \   00000E   0F5F         RLA.W   R15
   \   000010   0E5F         ADD.W   R15, R14
   \   000012   924E2C00.... MOV.W   0x2c(R14), &currMenu
     43              menuState = currMenu->name;
   \   000018   1F42....     MOV.W   &currMenu, R15
   \   00001C   D24F0200.... MOV.B   0x2(R15), &menuState
     44          
     45              strcpy(display_line[0], "          ");
   \   000022   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   000026   3C40....     MOV.W   #display_line, R12
   \   00002A   ........     CALLA   #strcpy
     46              strcpy(display_line[1], "          ");
   \   00002E   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   000032   3C40....     MOV.W   #display_line + 11, R12
   \   000036   ........     CALLA   #strcpy
     47              strcpy(display_line[2], "          ");
   \   00003A   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   00003E   3C40....     MOV.W   #display_line + 22, R12
   \   000042   ........     CALLA   #strcpy
     48              strcpy(display_line[3], "          ");
   \   000046   3D40....     MOV.W   #`?<Constant "          ">`, R13
   \   00004A   3C40....     MOV.W   #display_line + 33, R12
   \   00004E   ........     CALLA   #strcpy
     49              display_changed = 1;
   \   000052   D243....     MOV.B   #0x1, &display_changed
     50          }
   \   000056   1001         RETA
     51          

   \                                 In  segment CODE, align 2
     52          void MenuProcess(void) {
   \                     MenuProcess:
     53              switch(menuState) {
   \   000000   F2905400.... CMP.B   #0x54, &menuState
   \   000006   0620         JNE     ??MenuProcess_0
     54                  case START_MENU:
     55                      updateMenuPos(&start);
   \   000008   3C40....     MOV.W   #start, R12
   \   00000C   ........     CALLA   #updateMenuPos
     56                      displayStartMenu();
   \   000010   ........     CALLA   #displayStartMenu
     57                      break;
     58                  default:
     59                      break;
     60              }
     61          }
   \                     ??MenuProcess_0:
   \   000014   1001         RETA

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for menuState>`:
   \   000000   54           DC8 84

   \                                 In  segment DATA16_ID, align 2, align-sorted
   \                     `?<Initializer for start>`:
   \   000000   01005400     DC8 1, 0, 84, 0
   \   000004   ....         DC16 `?<Constant "">`
   \   000006   000000000000 DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \            000000000000
   \            000000000000
   \   000018   ....         DC16 `?<Constant "">`
   \   00001A   000000000000 DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \            000000000000
   \            000000000000
   \   00002C   ....         DC16 start
   \   00002E   000000000000 DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \            000000000000
   \            000000000000

   \                                 In  segment DATA16_ID, align 2, align-sorted
   \                     `?<Initializer for currMenu>`:
   \   000000   ....         DC16 start

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "">`:
   \   000000   00           DC8 ""

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "          ">`:
   \   000000   202020202020 DC8 "          "
   \            2020202000  
     62          
     63          

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   MenuProcess
        4   -> displayStartMenu
        4   -> updateMenuPos
      4   displayStartMenu
      4   trainsitionMenu
        4   -> strcpy
      6   updateMenuPos


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      11  ?<Constant "          ">
       1  ?<Constant "">
       2  ?<Initializer for currMenu>
       1  ?<Initializer for menuState>
      64  ?<Initializer for start>
      22  MenuProcess
       2  currMenu
       2  displayStartMenu
       2  lastThumb
       1  menuState
      64  start
      88  trainsitionMenu
      56  updateMenuPos

 
 168 bytes in segment CODE
  12 bytes in segment DATA16_C
  67 bytes in segment DATA16_I
  67 bytes in segment DATA16_ID
   2 bytes in segment DATA16_Z
 
 168 bytes of CODE  memory
  79 bytes of CONST memory
  69 bytes of DATA  memory

Errors: none
Warnings: none
